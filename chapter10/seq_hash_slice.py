# !/usr/bin/env python3
# -*- coding: utf-8 -*-
# @Time     : 2019/4/9 14:41
# @Author   : tangky
# @Site     : 
# @File     : seq_hash_slice.py
# @Software : PyCharm

"""
第10章 序列的修改,散列和切片
Vector类
基本的序列协议--__len__和__getitem__
正确表述拥有很多元素的实例
适当的切片支持,用于生成新的Vector实例
综合各个元素的值计算散列值
自定义的格式语言扩展
通过__getattr__方法实现属性的动态存取,以及只读特性
把协议当做正式接口

10.1 Vector类:用户定义的序列类型
使用组合模式实现Vector类,而不使用继承
向量的分量存储在浮点数数组中,而且还将实现不可变扁平序列所需的方法
10.2 Vector类第1版:与Vector2d类兼容
为了编写Vector(3, 4)和Vector(3, 4, 5)这样的代码,我们可以让__init__方法接受任意个参数(通过*args);
但是,序列类型的构造方法最好接受可迭代的对象为参数,因为所有的内置的序列类型都是这样做的.
如果Vector实例的分量超过6个,repr()生成的字符串就会使用...省略一部分,
包含大量元素的集合类型一定要这么做,因为字符串表示形式是用于调试的(因此不想让大型对象在控制台或日志中输出几千行内容)
使用reprlib模块可以生成长度有限的表示形式
"""